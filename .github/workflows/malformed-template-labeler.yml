name: Malformed issue template labeler

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
    
jobs:
  check-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v4
        timeout-minutes: 3
        with:
          script: |
            console.log(context)
            console.log(context.payload.issue.labels)
            
            const config = { 
              labelsToCheck: ['bug', 'enhancement', 'question'],
              labelsToIgnore: ['force-ignore-template'],
              labelsViolation: ['template-ignored'],
              checks: [
                {
                  log: 'checklist-section exists',
                  action: () => context.payload.issue.body && context.payload.issue.body.includes('### Checklist')
                }
              ]
            }
                        
            const issueLabels = context.payload.issue.labels.map(i => i.name)
            const issueBody = context.payload.issue.body
            
            console.log('--- Issue Info ---')
            console.log('Labels', issueLabels)
            console.log('Body', issueBody)
            console.log('---------')
            
            const valid = isIssueValid(issueLabels, config)
            
            if(valid) {
              // TODO: Remove label
            } else {
              console.log('Issue violates template!')
              
              if(!config.labelsViolation.some(label => issueLabels.includes(label))) {
                console.log('Adding label')
              
                github.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: labelsViolation
                })
              } else {
                console.log('Label already exists')
              }
            }

            function isIssueValid(issueLabels, config) {
            
              console.log('Checking if the issue can be ignored, specified by using the labels', config.labelsToIgnore)

              if (config.labelsToIgnore.some(label => issueLabels.includes(label))) {
                console.log('Issue has a label that it should be ignored');
                
                return true
              }
              
              console.log('Will check for the following labels', config.labelsToCheck)

              if (!config.labelsToCheck.some(label => issueLabels.includes(label))) {
                console.log('Issue does not match any label; ignoring it');

                return true
              }

              console.log('Issue should be processed')

              console.log('Performing checks...')

              for(const check of config.checks) {

                console.log('Checking if ' + check.log + '...')

                if(!check.action()) {
                  validIssue = false
                  console.log('FAILED')
                  return false
                }

                console.log('OK')

              }
              
              return true
            }
            
            
            
